{
	"info": {
		"_postman_id": "8eaa7a22-4226-4515-8ce6-3a8657b013f5",
		"name": "Task-Management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32155311"
	},
	"item": [
		{
			"name": "Create User",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Ajay Bhanushali\",\r\n    \"password\": \"Test@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/signup",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('id');\r",
							"    pm.expect(responseData).to.have.property('userName');\r",
							"    pm.expect(responseData).to.have.property('name');\r",
							"    pm.expect(responseData).to.have.property('basicAuthUserName');\r",
							"    pm.expect(responseData).to.have.property('basicAuthPwd');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Id is a non-negative integer\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.id).to.be.a('number');\r",
							"    pm.expect(responseData.id).to.be.at.least(0);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"UserName is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.userName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"UserName should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Name is a non-empty string\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"BasicAuthUserName and basicAuthPwd are non-empty strings\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.basicAuthUserName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"  pm.expect(responseData.basicAuthPwd).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"  pm.environment.set(\"basic_auth_user\", responseData.basicAuthUserName);\r",
							"  pm.environment.set(\"basic_auth_pwd\", responseData.basicAuthPwd);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userName\": \"Ajay_6cjz\",\r\n    \"password\": \"Test@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/login",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Board Add",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-user-id",
						"value": "3",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Ajay's task\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/board",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"board"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add User to board",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-user-id",
						"value": "3",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"boardId\": 1,\r\n    \"userId\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/board/people",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"board",
						"people"
					]
				}
			},
			"response": []
		},
		{
			"name": "Board List Get",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user-id",
						"value": "3",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/board/list/get",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"board",
						"list",
						"get"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Task",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-user-id",
						"value": "3",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"assignedTo\":1,\r\n    \"taskDesc\":\"Complete apis\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/1/task",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"1",
						"task"
					]
				}
			},
			"response": []
		},
		{
			"name": "Task list get",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user-id",
						"value": "3",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/1/task/list/get",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"1",
						"task",
						"list",
						"get"
					]
				}
			},
			"response": []
		},
		{
			"name": "Task Update",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "x-user-id",
						"value": "3",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"assignedTo\": 2,\r\n    \"taskDesc\": \"Desc changed\",\r\n    \"status\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/task/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"task",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Task Comment Add",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-user-id",
						"value": "3",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"comment\": \"what??\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/task/2/comment",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"task",
						"2",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Task Comment List Get",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user-id",
						"value": "2",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/task/2/comment/list/get",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"task",
						"2",
						"comment",
						"list",
						"get"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{basic_auth_pwd}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{basic_auth_user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}